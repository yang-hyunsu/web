/*
# 숫자형 처리 함수
1. 테이블에 컬럼별로 저장되어 있는 숫자형 데이터를 
	합산을 하거나 통계치를 낼 때, 올림/반올림/내림들을
	처리할 필요가 있을 때가 있다. 이때 사용하는 함수가
	숫자형 함수이다.
	ex) 학생 성적테이블에서 과목별 점수의 점수에 대한 합산과 평균 처리
	ex) 사원정보의 입사일을 기준으로 6개월후, 특정 일과 날짜의 차이 등
		에 대한 처리

	
2. 오라클은 기본적으로 숫자형 문자열의 자동형변환을 포함하고 있어서
	이것을 감안해서 처리하는 방법을 확인해보록 한다.
3. 주요 학습 내용
	1) 숫자형 함수들의 기능적인 내용을 확인하고 익힌다.
	2) 숫자형 함수에서 절삭시, 자릿수에 대한 처리를 확인한다.
	3) 각 함수를 사용할 때, 중첩적으로 사용할 내용에 대한 처리를
		감안하여, 앞에서 배운 여러가지 함수와 함께 사용하는 방법을
		생각해보자.
	4) select 함수처리와 where 함수처리의 차이점에 대하여 구분하여
		활용할 수 있도록 한다.
4. 주요 함수의 기본 형식
	1) round(데이터, 자리수) : 반올림 처리, 자릿수 처리해준다.
	2) trunc(데이터, 자릿수) : 내림/절삭 처리, 자릿수 처리해준다.
	3) ceil(데이터) : 올림 처리, 정수형 리턴
	4) floor(데이터) : 내림 처리, 정수형 리턴
	5) mod(데이터, 나눌수) : 대상되는 데이터를 나눌수로 나눈 후,
		나머지값을 처리할 때 사용한다. 오라클은 나머지 연산자가 
		없다. 함수로 처리
5. 생각해볼 내용
	1) 자릿수 처리 함수에서 자릿수 개념
		trunc(75.346,2) : 소숫점 이하 2가리까지 표시하고 그 이후
			내용을 절삭 처리 ==> 75.34
		trunc(7534.346,-1) :.을 기준으로 왼쪽으로 1자리 즉
			10자리를 단위로 절삭처리 ==> 7530
		trunc(7534.346,-2) :.을 기준으로 왼쪽으로 2자리 즉
			100자리를 단위로 절삭처리 ==> 7500			
	2) 위 함수의 적용의 범위
		- 숫자의 연산
		- 날짜형 데이터의 처리(날짜형 데이터의 처리 규칙과 관계해서)'
		  Date
			05/25 ==> 11/25 날짜별로 6개월 후의 날짜와 시간이 다름			
			현재시간을 기준으로 3개월 후  12:00
			날짜계산이 복잡 1/1000 ==> 1 ==> 60 ==>60 ==> 24
				==> 월		  
	3) 중첩함수 처리시 복잡성에 대한 대안	
 * */
SELECT round(23423.277,3) d1,
       round(23423.277,1) d2,
       round(23423.277,-1) d3,
       round(23423.277,-3) d4,
       trunc(23423.277,1) d5,
       trunc(23423.277,-1) d6,
       ceil(23423.277) d7,
       floor(23423.277) d8
FROM dual;   
--ex1) 급여를 100단위로 반올림처리, 급여+보너스를 1000단위로 절삭처리
--    하여 출력 
SELECT ename, sal, round(sal,-2) "급여1",
       trunc(sal + nvl(comm,0),-3) "급여2(급여+보너스)"
FROM emp;   
-- sal + nvl(comm,0) : comm이 null이면 합산값은 null이기에
-- 이를 방지하기위해서 null값을 0으로 처리하여 합산이 되게 처리할 때
-- 주로 사용한단. 위 내용을 nvl과 trunc를 중첩적으로 사용되었다.

--ex2) 급여를 1/13로 나누어 소숫점 2자리에서 절삭 출력 컬럼, 
--     정수형올림 처리로 출력 컬럼
SELECT ename, sal, trunc(sal/13,2) 급여1,
	   ceil(sal/13) 급여2
FROM emp;
/*
# mod
1. 데이터베이스에서는 산술연산자 %(나머지값) 처기 키워드가 없어 사용된다.
2. 형식
	mod(데이터,m) : 데이터를 m으로 나눈 나머지값
	ex) mod(10,3) ==> 1
 * */
SELECT mod(10,3) d1, mod(11,2) d2, mod(10,2) d3
FROM dual;
-- ex) 사번이 짝수인 사원번호와 사원명을 출력하되, 짝/홀 구분자 0/1도
--     출력하세요.
SELECT empno, ename, mod(empno,2) "짝/홀 구분자"
FROM emp
WHERE mod(empno,2) = 0;


