# 자바스트립트 학습 내용 계열화 
1. javascript 개요
	1) 개론
	2) 에러 트래킹
		브라우저 화면 콘솔창 확인 : f12
		각 라인별로 트래킹 처리 : console.log()
		- 실행하는 코드 중간에 단계별로 nubering 해서, 프로세스가 잘 진행되는지 확인
		  ex) console.log("1");
		  ex) console.log("2");
		  ex) console.log("3");
		- 해당 데이터나 객체가 호출되는지 확인
		  ex) console.log("obj:"+h1Obj);
		  ex) console.log("data:"+num01);
		# 실행 에러: 변수를 잘못 선언되거나 데이터 초기화 되지 않을 때
		  null, undefined   


	3) 입력/출력
		- 입력
			confirm("메시지") : true/false
			prompt("메시지","입력초기") : 
				문자열로 입력, null
			DOM객체를 입력
				이벤트나 함수에 의해 호출되어 입력된 내용을 아래와 같이
				프로그램으로 가져와서 사용할 수 있다.
				<input type="button" value="아이디값 확인"
					onclick="checkId()">
				function checkId(){	
					var idObj = document.querySelector("input[name=id]")
					var idVal = idObj.value;
				}
		- 출력
			alert("경고창 출력")
			console.log("f12 console에서 보이는 문자열")
				console.log(obj01) : 객체의 변수를 할당했는 때,
				객체의 속성까지 확인할 수 있기에 활용도가 높다.
			document.write("태그")
				화면에 출력할 내용을 javascript로 처리하는 부분.
			document.body.innerHTML = "<h2>안녕</h2>"
				DOM객체로 전체화면을  출력할 때, 사용된다.
			
2. javascript 기본 문법
	1) 변수 선언과 자료형
		- 선언 형식
			let(지역/전역변수 구분), 
			var(전역변수) 
			const(상수-할당후 변경 불가)
			let num01 = 25;
			var name = "홍길동";
			const PI = 3.14;
		null, undefined : 초기화되지 않거나 데이터값 없을 때,
			나오는 실행에러 코드
		javascript에서 사용되는 데이터 유형	
			Number, String, Boolean, Function, Object(Array)
			typeof 변수명, typeof(변수명) : 데이터 유형 확인
			자바스크립트는 문자열은 자동 형변환
				 단, + 연산자를 사용할 때는 반드시 형변환 함수 활용
				 Number(), parseInt(), parseDouble()
			자바스크립트의 주요 내장 객체
				Math.floor(), Math.round(), Math.ceil()
				Math.random()
				임의의 수 처리 
					Math.floor(Math.random()*경우의수+시작수)
	2) 연산자 : 자바와 유사
		비교연산자
			== : 데이터비교(숫자형문자열과 숫자가 같으면 true)
				 "25" == 25   true
			=== : 데이터유형과 데이터를 비교
				 "25" === 25   false
				 25 === 25   true
		논리연산자
			&&, ||, !
		산술연산자
			+, -, *, /, %
			
	3) 조건문
	4) 반복문
3. 함수
	1) 내장 함수
	2) 사용자 정의 함수
		function 함수명(매개변수...){
			return 리턴데이터..
		}
4. 객체
	1) 배열
		var 배열명 = [데이터1, 데이터2, ...]
	2) 객체
		var 객체명 = {속성:속성값,...}
		var 객체형배열 = [{속성:속성값},{속성2:속성2값}]
		function 객체명(매개변수){
			this.속성 = 속성초기값;
			this.함수명 = function(){
			
			}
		}
		class 클래스명{
			constructor(){
				this.속성=속성값;
			}
		}
	3) 객체의 기능 메서드
5. DOM 객체
	Document Object Model로 body에 있는 모든 태그를 객체화하여
	속성을 변경하여 처리할 수 있게 하는 것을 말한다.
	이벤트에 의해서 해당 태그들이 화면상 동적으로 처리되게 한다.
	1) var 객체명 = document.querySelecotor("선택자")
	2) var 배열명 = document.querySelecotorAll("선택자")
	3) <태그 이벤트="call(this)">
	   function call(obj){
		   obj.속성 = 변경될 속성값;...
	   }
6. 이벤트 처리
	1) <태그 on이벤트명 = "이벤트핸들러함수(전달할매개데이터)">
		ex) <h1 onclick = "chColor(this)">
	2) var 객체명 = document.querySelecotor("선택자")
	   객체명.on이벤트명 = function(매개변수){
	   		
	   }
	   ex) var h2Obj = document.querySelector("h2");
	   	   h2Obj.onclick = function(){
	   	   	    this.style.background = "yellow";
	   	   	    this.innnerText = "클릭했습니다.";
	   	   }
7. 비동기 통신 처리
	1) ajax	   	   
8. 여러가지 lib
	<script src="추가라이버러리/프레임워크"></script>
	1) JQUERY
		$("선택자").메서드("속성","속성값");
		ex) $("h2").css("color","navy");
	2) VUE(framework)
		컴포넌트 기반 프레임워크

