1. setTimeout은 다음 중 어떤 기능을 수행하는 JavaScript 메소드인가요?
    a) 함수를 주어진 시간이 지난 후에 실행 #
    b) 지정된 시간마다 함수를 반복적으로 실행
    c) 지정된 시간동안 코드를 중지
    d) 주어진 시간동안 페이지를 새로 고침

2. clearTimeout 메소드는 어떤 목적으로 사용하는 것인가요?
    a) setTimeout으로 설정된 시간을 재설정
    b) setTimeout이 반복적으로 실행되는 것을 막음
    c) setTimeout으로 예약된 함수를 즉시 실행
    d) setTimeout으로 예약된 함수의 실행을 취소 #
       clearTimeout/clearInterval 실행 중지, 자원해제

3. JavaScript에서 "===" 연산자는 어떤 용도로 사용하는가요?
    a) 값이 동일한지 비교
    b) 값과 타입이 동일한지 비교 #
    c) 값이 동일하거나 타입이 동일한지 비교
    d) 값이 다른지 비교
    '25'==25 :true
    '25'===25 :false

4. "7" + "5"의 결과는 무엇인가요?
    a) "12"
    b) 12
    c) "75" #
    d) 75
    js에서는 + 연산자만 연결처리
    나머지 사칙연산자는 자동형변환해서 연산처리해준다.

5. Number("3.5") + Number("2")의 결과는 무엇인가요?
    a) "5.5"
    b) "5.2"
    c) 5.5 #   
    d) 5.2
	NUmber() 정수형 문자열, 실수형 문자열 둘다 정수/실수로 변환
	처리해준다. 
6. Number("3000원") + Number("2000원")의 결과는 무엇인가요?
    a) 5000
    b) "5000원"
    c) NaN #
    d) 에러
    Number vs parseInt()/parseFloat() 차이
    문자열이 들어가면 NaN(not a number) 실행 에러 코드
    에러 코드만 리턴해주고, 실행을 중단되지 않는다.

7. parseInt는 어떤 작업을 수행하는가요?
    a) 문자열을 실수로 변환
    b) 문자열을 정수로 변환 #
    c) 정수를 문자열로 변환
    d) 실수를 문자열로 변환

8. parseInt("7.5")의 결과는 무엇인가요?
    a) "7"
    b) 7 #
    c) "7.5"
    d) 7.5
    숫자형 문자열을 숫자 함수 7.5
    타입을 변경하는 함수     7
    parseInt()는 위 두가지 기능 처리를 한번에 처리해준다.
    

9. parseInt("1000원")의 결과는 무엇인가요?
    a) "1000"
    b) 1000 #
    c) "1000원"
    d) NaN
    단위를 입력하는 처리 form요소객체에서 활용하면 효과적이다.
    문자열 단위가 나타나기전까지 숫자형문자열을 숫자로 변환해준다.
    

10. eval 메소드는 어떤 기능을 수행하는가요?
    a) 문자열을 코드로 전환하여 실행 #
    b) 코드를 문자열로 전환하여 저장
    c) 문자열을 암호화
    d) 암호화된 문자열을 해독

# 실습문제
1. 문제: "7.8abc"에서 실수부만 추출하여 숫자로 변환하고 이를 제곱하는 코드를 작성하세요.
   parseFloat("7.8abc")
2. 문제: 일정 시간 간격(1초)으로 화면에 "Loading..." 
	메시지를 출력한 후 5번 출력하면 중지되도록 하는 코드를 작성하세요.
	<h2></h2>
	
	var h2Ob = document.querySelector("h2")
	var cnt=1;
	var set01 = setInterval(function(){
	  	h2Ob.innerText=(cnt++)+"번 Loading..."
	  	if(cnt==6){
	  		alert("중지!")
	  		clearInterval(set01);
	  	}
	  	
	},1000)
	
	
	
	
	




    
    