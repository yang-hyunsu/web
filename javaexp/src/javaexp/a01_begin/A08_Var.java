package javaexp.a01_begin;

public class A08_Var {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
/*
# 변수의 명명규칙(필수)
1. 첫번째 글자는 문자이어야 한다. - 숫자로 시작하면 에러발생
2. 특수문자는 $, _만 허용된다. 그외는 에러발생
3. 대소문자를 구분하여, 같은 글자라도 대소문자가 다르면 다른 변수로
	인식한다. => 동일한 변수명으로 선언하지 못한다
	=> 선언할 때만 동일한 변수를 선언하지 못하지,
	할당은 재할당 되는 것이므로 동일한 변수로 사용할 수 있다.
4. 내장된 예약어는 변수로 사용할 수 없다.
	for, if, break, while 등 명령처리시 사용되는 예약어를
	변수로 사용할 수 없다.
 * */
		int num01 =25;
//		int 01num01 = 40;  숫자로 시작해서에러 발생
		String $str = "안녕";
		String apple_name="노랑 사과";
//		var #num01;  // 기타 특수문자는 에러가 발생
		int Num01 = 30; // num01, Num01은 다른 변수
//		int num01 = 50;
		var num02 = 70;
//		var은 초기에 데이터에 따라 형이 정해지는 것을 말한다.
//		var num02 = 50; 선언은 동일한 변수 불가
		num02 = 90; // 선언된 내용을 할당하는 것은 가능
//		num02 = "안녕"; 
//			한번 할당한 변수는 다른 데이터로 할당 불가능(프로그램마다 차이)
//			ps) script성 프로그래밍에서는 다른 데이터 할당 가능
//		int for = 30; 예약어를 변수로 사용할 수 없다.
//			대부분 예약어는 진하게 표현되어 있고, 에러를 표기해준다.
/*
# 변수의 가독성을 위해 지켜야할 원칙(에러는 발생하지 않는다)
1. 변수는 한글이 아닌 영문으로 선언하여 사용한다.
2. 변수를 사용할 때, 의미 있는 변수를 사용한다.
	- 짧은 코드에서 간단하게 테스트용으로 사용할 때는 i, j, k
		등을 사용할 수 있지만, 실무 프로그램에서 전역적인 변수를
		사용할 때는 신중하게 의미 있는 변수를 사용한다.
		ex) breakCount, accountPay 등 해당 변수를 보았을
			때, 어떤 목적에 의해 사용되는지를 구분하게 선언.
3. 변수의 유형에 따른 구분
	1) 클래스명 반드시 대문자로 시작
		- 주의 클래스를 통한 참조변수
			(heap영역의 주소를 참조)는 소문자로 선언한다.
		class Person{}
		==>
		Person p01;
		Person P01;(X)
	
	2) 일반변수명/메서드을 소문자로 시작
		cf) 메서드란 클래스 하위에 기능을 수행해주는 함수
	3) 변수명에 중첩적인 의미가 있을 때는 _, 대문자로 구분하여 
		선언한다.
		ex) setage ==> setAge
			transpay ==> trans_pay/transPay
			
		
 * */		
//		int 숫자1 = 30;
		
		
		
		
		
	}

}
