# 필요한 툴
1. editplus/totalcommand
2. jdk(17version)
    openjdk17 download	
	zip => 특정폴드 => 실행명령어 bin path
3. eclipse//intellij
    1) svn//git (형상관리툴)
4. vscode : front단 프로그래밍을 처리할 때, 활용
5. notion : 문서공유

# java 운영체제에서 사용할 수 있게 처리
1. path를 java의 실행 파일경로로 설정하여야 한다.
c:\a01_javaexp\jdk-17.0.2\bin\
   해당 경로로 이동하지 않더라도 해당 경로에
   있는 명령어를 수행하게 해준다.
cmd
윈도용 콘솔명령어 창
java -version

# eclipse의 사용
1. 실행 명령 위치
   c:\a01_javaexp\eclipse\eclipse.exe
2. 프로그래밍한 코드 위치를 지정해서 실행
   c:\a01_javaexp\workspace
   1) 프로젝트 코드 지정
   2) 환경설정 정보 저장
3. 자바프로젝트만들기
   1) 상단메뉴 file ==> new ==> 프로젝트
      ==> java project 
   2) 프로젝트명: javaexp
   3) 생성.
4. 자바소스코드 만들기
   1) javaexp 프로젝트 하위에 src 폴드 하위에
   2) package 만들기
   3) java 클래스 만들기
	main() 메서드를 포함할 때, 실행이 가능하다.
	# 주의 : 클래스명을 반드시 문자열로 대문자로
	시작하여야 한다.(에러는 없지만, 가독성을 위해서
	일반적으로 객체지향프로그래머의 경우 많이 활용한다.)
6. 자바 실행 하기
	ctrl+(+/-) : 글자크기조절
	ctrl+ m : 전체화면/축소화면
	// 주석문 : 코드를 실행하지 않는 설명 내용 
	System.out.println("안녕하세요! 자바 첫만남2");
	System.out.println("출력내용") : 출력 실행명령문
	ctrl+s : 저장
	ctrl+f11 : 실행 단축명령어
# svn/git
1. 현업에서 사용되는 소스관리 툴
2. 변경되는 시점마다 version 각 파일에 mapping(작성나, 주석 포함)
3. 서버 설치
4. client를 eclipse help==> market place에서 svn 
	검색해서 설치
5. 서버에 접속
   https://192.168.10.99/svn/web
   future//7777
6. svn 명령어
	폴드기준/파일기준


	1) team ==> update to head 
		서버에 있는 파일이나 경로 가져오기
	2) team ==> commit
		서버에 파일 올리기
	3) team ==> refresh/cleanup
		서버에 있는 파일이 충돌 ==> locked
		lock을 풀어주는 명령어
	4) replace with ==> latest repositories  
	5)
	 
	 
	 
	














