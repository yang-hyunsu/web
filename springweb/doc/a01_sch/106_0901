# 주요학습범위
1. 스프링 MVC
2. 스프링 ajax
3. 스프링 Vue

# 학습목표
1. 스프링 Boot를 활용한 게시판 처리할 수 있다.
2. 스프링에서 ajax를 활용한 fullcalendar 처리할 수 있다.
3. 스프링에서 vue 여러가지 조건문/반복문을 처리할 수 있다.




# 다음주 일정
1. 개발 완료(다음주 월)
2. 통합테스트/결과에러처리 화/수
	사전 : 하나의 ip에 모든 것을 처리할 수 있네 소스통합
		서버테스트 완료된 상황.
	테스트시나리오(화요일 오전 9:00제출 전체를 위한 반드시)
	1차:1==>2, 2==>3, 3 ==> 4, 4==>1조
	2차:1==>3, .. 
	3차:1==>4, ..
	테스트 + 에러잡기 ==> 테스트 담당자 확인으로 완료..
3. 전체최종리허설(전체내용다발표) 목
	
4. 최종발표(제한된 시간에 발표-녹화) 금
	
# 통합테스트 진행..
1. 테스트 진행
	1) 통합테스트 시나리오 전달
		- IP 주소
		- 권한 계정/비번
		- 통합테스트 시나리오 상세 작성(개발담당자/테스트담당자)
	2) 진행
		테스트대상조 ==> 테스트하는조
	1차:1==>2, 2==>3, 3 ==> 4, 4==>1조
2. 주요 점검 내용
	1) 통합 테스트 시나리오에 의해 진행
	2) 버그 확인
	3) 비지니스 로직 확인
	4) 결과내용에 상세하게 정리
	5) 담당자/조장 확인해서 테스트가 끝나 후, 
		- ERROR, 버그 잡기
		- 시간이 많이 필요하는 것은 따로 정리..
		
	
	
# 현재 조별로 남은 업무
1. 정리할 ppt 자료

2. 개발한/개발할 내용

3. 개발한/개발할 내용 중, 이슈사항.

4. 요청사항.

5. 통합테스트시나리오 작성


# AWS 
1. BOOT RDS VUES
2. iframe연동해서 추가하는 걸로..
	











# 발표
공통


4조
1. 추천 레벨은 DB로 처리하여 관리자 메뉴에서 관리하는 것은 어떤지?
	==> DB로 관리하여야 할 데이터 조건문 처리가 되어 있는 거 없는지 확인
2. 테스트환경 : SVN서버(소스에만한정) ==> 개발웹서버(DB,웹서버,svn포함)  명칭 변경
3. 시스템 환경에 RUD?? (오타인지 등록이 없어서인지?) 오타이면 전체 페이지 검토 필요
4. 목차 정리 : 시스템/핵심기술 설계 앞에, 화면구현시 세션/유효성 체크는 공통부분에
5. 서버주소로 시연되는 내용 확인(localhost ==> 고정아이피) 
6. 일정에서 삭제시 session 권한 체크 어떻게 되고 있는지?
7. 탈퇴한 계정이 로그인이 되는지?
8. 전화번호는 인증을 하지 않더도 이메일은 인증을 할 수 있지 않는지?
9. 시연시 사전 테스트 확인

1조
1. ppt자료 구현 내용에 설명내용이 없음. 간략하게 설명하는 내용 포함 필요한 부분이 많음.
2. 회원 탈퇴시, 메일로 사유 보내는 프로세스는?(시간 check로 진행)
 

2조
1. PMBOK 지식체계(타이틀 옆에 구현된 범위라고 표기)
2. 핵심기술 계층 구조 점검
3. SVN서버는 소스 공유로 일부분 ==> 개발 웹서버가 핵심(개발웹서버로 표기), SVN, DB서버 표기
4. 사원번호 처리 프로세스 재점검(회사에 처리되는 프로세스로 - 등록자 회사인사담당자에서 입사정보를 통해 전달받고,
	인사담당자는 최소정보 등록시 메일로 발송 사번과 임시비번 메일로 발송)
5. 리스크관리 처리되면 대시보드에 포함.
6. 단위테스트 진행 일정과 프로세스(주단위 - 개발 ==> 단위테스트진행 ==> 결과에 따른 조원들과 코드 리뷰 ==> 조치 ==> 최종테스트 및 완료)
7. 역할을 지정된 내용을 처리	
8. 프로젝트/간트처리시 업무 추가/수정/삭제 권한 담당자?
	==> 화면별 권한 체계 시스템 정리(구현화면에 언급)

3조
1. 단위테스트 내용 : 조금 더 밝고, 글자 크기 크게 하게 가독성은 높일 수 있도록 합니다.
	통합테스트 항목과 함께 표현.
2. 직원이 등록되면 해당당사자 메일발송으로 아이디와 비번에 발송되는가?	
3. 제고 처리 부분 통일성 있는 인터페이스 검토? 멀티체크로 다 수정이 되든지, 다 삭제가 되든지? 일관성 점검
4. aws는 부분적 적용검토?
5. 판매가 증감 버튼으로 10%할 필요한지?






	
# 수업 진행 계획
1. AWS RDS(데이터베이스)서버를 연동하여, 스프링부트 환경에서
	Vue로 사원정보 조회 처리
2. 처리순서
	1) AWS RDS 데이터베이스 서버 설정(mariadb)
	2) DB 원격 접속 및 기본 데이터 입력
	3) VUE - 컴포넌트 연습, DB 연동 처리
	4) 스프링부트에서 VUE로 DB 연동 환경 설정 및 테스트
	5) 스프링부트 build로 @@.jar 생성 테스트 확인
	6) 원격 EC2서버 빌드파일 업로드 및 실행 및 브라우저로 확인..
3. 학습순서
	1) VUE - 컴포넌트 연습
	2) AWS RDS 데이터베이스 설정
	3) DB연동 툴 AWS RDS 연동 확인
	4) 스프링 부트 : VUE, mariadb 연동 환경 설정 및 
		emp 조회화면 구성
	5) 스프링 부트 빌드 및 원격서버 로딩 및 확인.

	
		
	
	
	
	
	
	
	



# 피드백 반영 내용.
1. 공통/개별 피드백사항/도출된 개선사항
	표기 ==> @@pt	
2. 전달내용	
	1) 반영된 ppt 자료
	2) 반영 내역 표시 메시지
	1. 전체 워크플로우의 최상위 메뉴는 크게 확인 필요
	==> @@ page에 반영
	2. 매주차별 결산(계획 대비 진행 발전사항 정리, 다음 주 진행 상세)
	==> 현재조에 해당 사항 아님..
	3. 기능별 역할 분담 명확화
# 주요 일일 진행계획(학습 단계별 체계화)
1. 전날 내용 정리
2. 도입
3. 개념 및 원리이해/실습(진도)
4. 정리 - 과제 


# 프로젝트 금주 피드백
1. 공통
	1) 코드 핵심 위주 정리 - 화면구현(50%)과 핵심 코드내용(50%)
	2) 중요도/우선순위 기준 고려? 
	3) 일정 진행 프로세스의 중요성 인지?
	   개인/팀 일정 
	   일정계획 ==>      진행 내용     ==>  피드백
	   러프유연 ===> 반드시 기록/발전방향 ==>
   
4. 진행 범위 조금은 도전적인 목표로 진행
   1) 범위 : 도전
       설계(DB)

5. 단계별 피드백(화면/ppt ==> 상세코드/설계)

# 최종 조편성
1조 정다은 임소정 김예진 유예나 이은서  
2조 강경웅 박다솜 정준혁 서지우 
3조 노현우 강준규 김동현 김학수  
4조 유영재 김윤아 신혜원 윤석민 
개인 박상우 서유림 최선영 


# 4차 조편성
1조 정다은 임소정 김학수 서지우
2조 강경웅 박다솜 정준혁 이은서
3조 노현우 강준규 김동현 박상우 
4조 유영재 김윤아 신혜원 윤석민 
5조 서유림 최선영 김예진 유예나 

# 수업진행
1. 백앤드:spring1단계 ==> springboot2단계
2. 프런트앤트:vue

0. 
1. bootstrap template
2. 4주범위(7/7~8/4)
	
3. 17:00~18:00, 목:오후 시간 확인? 정리시간  금:오전발표
4. 서버세팅
	1) 강의장내 서버
		- 소스통합(svn)
		- 데이터베이스(추가계정) : 방화벽설정
		- 웹서버
	------------------------------------------	
	2) 고정ip(vpn - 5000~7000) : 조원들과 함께 협의 
		
	------------------------------------------	
	3) cloud
		- git(*)
		- 무료 DB 서버 
	4) aws(수업)
		- 웹서버
		- DB서버
		 		
# 진행 단계
1. 주제
2. 주요 기능
3. 부트스트랩 template 선정
4. 지난 프로젝트에서 주의 사항, 개선할 사항 및 목표할 내용 정리
5. 일정계획
6. 요구사항정의서
7. 역할 분담	
8. 화면설계/DB설계
9. 개발환경 구축(공통소스(git,svn), DB서버)
10. 공통기능 처리
	1) 권한 처리/session 처리
	2) js(유효성처리)
	3) 로그인/회원가입/리스트형게시판
	4) ajax 처리 모듈
	5) 공통 Dao 처리	
11. front단/back단 개발..

	








