# fullcaledar api 활용
1. json 형식으로 처리되는 jquery lib 활용은 웹 개발에서 중요하고
	효율적인 처리에 꼭 필요로 한다.
2. 해당 api 내용에서 데이터를 분석하고, 이벤트 처리를 확인하여,
	backend단에서 처리할 내용만 설정하면, 웹 개발을 보다 효과적으로 
	처리할 수 있다.
3. 주요 처리 기능 및 프로세스
	1) fullcalendar를 사용하여 일정 등록/수정/삭제를 처리할 수 있다.
	2) 전체 월별 일정을 확인하여 사용할 수 있다.
	3) fullcalendar에 업무상 필요로 하는 다양한 데이터를 활용할 수 있다.
4. 개발 순서		
	0) 개발 환경 구성
		- 기본 source 확인
		- 필요로 하는 css, js, html 위치 확인 및 선언
		- jsp로 기본 화면 호출 처리
	1) backend단 처리(DB처리)
		- 사용할 data json형식을 확인하여, DB 테이블 구성
		- 사용할 주요 sql 작성
			전체 리스트
			등록 
			수정
			삭제
		- VO 작성 : 리스트, 등록, 수정, 삭제 시 사용되는 데이터를
			바탕으로 VO 클래스 선언
		- dao/mapper 선언
	2) service
	3) controller
		- 호출할 초기 리스트 화면 처리 메서드
		- json 데이터 호출 처리 기능 메서드
		- 등록
		- 수정
		- 삭제처리
	4) view단 처리
		- 기본 api를 기준으로 json 데이터 로딩 메서드
		- 각 기능별 이벤트 처리 함수 확인 및 처리
		- 주요 기능 에벤트 별 사용 ajax 처리 				
	
# 개발 환경 구성
	- 기본 source 확인
	- 필요로 하는 css, js, html 위치 확인 및 선언
	- jsp로 기본 화면 호출 처리
1. 초기 controller단을 통해서 화면 로딩.

# backend단 처리(DB처리)
1. 사용할 data json형식을 확인하여, DB 테이블 구성
   groupId: 999,
   id:일정고유내용..
   title: '긴일정', 타이틀
   start: '2023-08-07', 시작일/시간
   end: '2023-08-10' 종료일/시간
   #borderColor:  테두리색상(X)
   backgroundColor: 배경색상
   textColor: 글자색상
   allDay 종일여부
   writer : 작성 - 추가 속성
   content :내용 - 추가 속성..
   url: 'http://google.com/'
   
/*
   id:일정고유내용..
   title: '긴일정', 타이틀
   start: '2023-08-07', 시작일/시간
   end: '2023-08-10' 종료일/시간
   #borderColor:  테두리색상(X)
   backgroundColor: 배경색상
   textColor: 글자색상
   allDay 종일여부
   writer : 작성 - 추가 속성
   content :내용 - 추가 속성..
   url: 'http://google.com/'
 * */
CREATE TABLE calendar(
	id NUMBER PRIMARY KEY,
	title varchar2(200),
	writer varchar2(50),
	start1 varchar2(50),
	end1 varchar2(50),
	content varchar2(1000),
	backgroundColor varchar2(50),
	textColor varchar2(50),
	allDay number(1),
	url varchar2(200)	
);
/*
insertCalendar
private int id;
private String title;
private String writer;
private String start;
private String end;
private String content;
private String backgroundColor;
private String textColor;
private boolean allDay;
private String url;

INSERT INTO calendar values(cal_seq.nextval,
			#{title},#{writer},#{start},#{end},
			#{content},#{backgroundColor},#{textColor},
			#{allDay}, #{url})	

insertCalendar.do?title=등록2&writer=마길동&start=2023-08-01&end=2023-08-02&content=내용2&backgroundColor=#330033&textColor=#FFCCE5&allDay=1&url=
 * 
 * */
CREATE SEQUENCE cal_seq;
INSERT INTO calendar values(cal_seq.nextval,
	'첫일정','홍길동','2023-08-08','2023-08-09',
	'첫일정입니다.','#0099cc','#ccffff',1,
	'http://www.naver.com');
/*
INSERT INTO calendar values(cal_seq.nextval,
	#{id},#{writer},#{start},#{end},
	#{content},#{backgroundColor},#{textColor},#{allDay},
	#{url})
SELECT * FROM calendar
	
public int insertCalendar(Calendar ins);	
public List<Calendar> calList();

==> dao, mapper 적용
1. A08_FullCalDao
2. A02_CalendarMapper.xml
3. Calendar.java ==> cal로 alias 등록		
	
 * */
SELECT * FROM calendar;
   
   
	- 사용할 주요 sql 작성
			전체 리스트
			등록 
			수정
			삭제
	- VO 작성 : 리스트, 등록, 수정, 삭제 시 사용되는 데이터를
			바탕으로 VO 클래스 선언
	- dao/mapper 선언	
2. controller를 통해
	1) 기본 json데이터 list 출력 처리
# front단 처리(js 기능 이벤트 핸들러/ajax 처리)
1. 등록시 : 일정 등록
	1) 모달창을 통해
		일정#
		시작일#
		종료일#
		내용
		배경색상#
		글자색상#
		종일여부#
		입력되게 처리(#-내부API에서 있는 내용)
		입력 후, AJAX로 controller 호출
		dao/mapper/service 처리

2. 특정일정 클릭시, 상세내용 확인
	1) 수정시
	2) 삭제시
	 	
# 등록처리
0. 등록 이벤트 확인
1. 기본 title 및 버튼 정리
	1) 타이틀 : 일정등록
	2) button은 등록번트와 close버튼만 보이게 처리
	3) 기본 항목 확인..
2. 등록시, 매개변수로 가져오는 기본 데이터 확인 및
	화면에 출력 처리..
3. 데이터 입력에 대한 vo로 할당될 수 있게 name="속성" 처리
4. 등록버튼 클릭시,
	ajax 처리..		
	
	
	
	
	
	
		
	
	
	
	