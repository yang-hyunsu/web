1. 매개변수를 전달할 때 @Param 어노테이션을 사용하는 이유는 무엇일까요?
   a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.
   b. 매개변수를 식별하기 위해 사용하기 위해서입니다.
   c. 매개변수를 매핑하기 위해 사용하기 위해서입니다.
   d. 매개변수를 분리하여 전달하기 위해 사용하기 위해서입니다.

2. @Param 어노테이션을 사용하지 않고 매개변수를 전달하는 방법은 무엇일까요?
   a. Map 객체를 사용하여 매개변수를 전달합니다.
   b. 매개변수의 이름을 직접 사용하여 전달합니다.
   c. 매개변수를 배열로 묶어서 전달합니다.
   d. 매개변수를 XML 형식으로 전달합니다.


3. resultMap을 사용할 때 컬럼명과 객체의 프로퍼티가 다른 경우 어떤 태그를 사용하나요?
   a. `<id>`
   b. `<column>`
   c. `<property>`
   d. `<result>`

4. resultMap의 id 속성은 무엇을 의미하나요?
    a. 컬럼의 식별자
    b. 객체의 식별자
    c. resultMap의 식별자
    d. SELECT 문의 식별자

5. resultMap을 사용할 때 중복된 결과를 처리하기 위해 `<id>` 속성을 사용하면 어떤 결과가 나타날까요?
    a. 첫 번째 결과만 유지됩니다.
    b. 중복된 결과가 모두 출력됩니다.
    c. 중복된 결과가 제거되고 하나의 결과만 출력됩니다.
    d. 오류가 발생합니다.

6. dao.exp14DeptInsert(@Param("no") int deptno, @Param("dpartnm") String dname, @Param("location") String loc) 메서드에서 @Param 어노테이션을 사용하는 이유는 무엇일까요?
    a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.
    b. 매개변수를 식별하기 위해 사용하기 위해서입니다.
    c. 매개변수를 매핑하기 위해 사용하기 위해서입니다.
    d. 매개변수를 분리하여 전달하기 위해 사용하기 위해서입니다.

7. 다음 중 매개변수로 2~3개의 데이터를 처리하기 위해 사용되는 형식은 무엇인가요?
   a. List
   b. Set
   c. Map
   d. Array


8. Map을 활용하여 매개변수를 전달하는 mapper에서 SQL 문 내에서 매개변수를 참조하기 위해 사용되는 표현은 어떤 것인가요?
   a. #{params.ename_sch}
   b. #{ename_sch}
   c. ${params.ename_sch}
   d. ${ename_sch}


9. 다음 중 dao 메서드의 리턴 타입이 void인 경우에는 어떤 태그를 생략할 수 있나요?
   a. `<resultType>`
   b. `<parameterType>`
   c. `<returnType>`
   d. 생략할 수 없음


1. 매개변수를 전달할 때 @Param 어노테이션을 사용하는 이유는 무엇일까요?
   a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.
   b. 매개변수를 식별하기 위해 사용하기 위해서입니다.
   c. 매개변수를 매핑하기 위해 사용하기 위해서입니다.
   d. 매개변수를 분리하여 전달하기 위해 사용하기 위해서입니다.

   정답: a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.
   해설: @Param 어노테이션은 매개변수의 이름과 SQL 쿼리에서 사용되는 매개변수 이름을 매핑하기 위해 사용됩니다. 이를 통해 MyBatis는 매개변수의 값을 올바르게 매핑하여 쿼리 실행에 사용합니다.



2. @Param 어노테이션을 사용하지 않고 매개변수를 전달하는 방법은 무엇일까요?
   a. Map 객체를 사용하여 매개변수를 전달합니다.
   b. 매개변수의 이름을 직접 사용하여 전달합니다.
   c. 매개변수를 배열로 묶어서 전달합니다.
   d. 매개변수를 XML 형식으로 전달합니다.

   정답: b. 매개변수의 이름을 직접 사용하여 전달합니다.
   해설: @Param 어노테이션을 사용하지 않는 경우에는 매개변수의 이름을 
   직접 사용하여 전달할 수 있습니다. 이 경우에는 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름이 일치해야 합니다.

   

3. resultMap을 사용할 때 컬럼명과 객체의 프로퍼티가 다른 경우 어떤 태그를 사용하나요?
   a. `<id>`
   b. `<column>`
   c. `<property>`
   d. `<result>`

   정답: b, c. `<property>`

   해설: resultMap에서 컬럼명과 객체의 프로퍼티가 다른 경우에는 `<property>` 태그를 사용하여 매핑합니다. `<property>` 태그를 사용하여 컬럼명과 객체의 프로퍼티를 매핑할 수 있습니다.


4. resultMap의 id 속성은 무엇을 의미하나요?
    a. 컬럼의 식별자
    b. 객체의 식별자
    c. resultMap의 식별자
    d. SELECT 문의 식별자

   정답: a. 컬럼의 식별자
   해설: resultMap의 id 속성은 컬럼의 식별자를 의미합니다. id 속성을 사용하여 중복된 결과가 있을 때 첫 번째 결과를 선택할 수 있습니다.
		<id  하위 요소 객체는 데이터가 중복되는 특정컬럼의
			데이터를 행단위로 1개만 남고 삭제한다.
		

5. resultMap을 사용할 때 중복된 결과를 처리하기 위해 `<id>` 속성을 사용하면 어떤 결과가 나타날까요?
    a. 첫 번째 결과만 유지됩니다.
    b. 중복된 결과가 모두 출력됩니다.
    c. 중복된 결과가 제거되고 하나의 결과만 출력됩니다.
    d. 오류가 발생합니다.

   정답: a. 첫 번째 결과만 유지됩니다.

   해설: resultMap에서 `<id>` 속성을 사용하면 중복된 결과가 있을 때 첫 번째 결과만 유지됩니다. 따라서 중복된 결과를 제거하고 첫 번째 결과만 출력합니다.



6. dao.exp14DeptInsert(@Param("no") int deptno, @Param("dpartnm") String dname, @Param("location") String loc) 메서드에서 @Param 어노테이션을 사용하는 이유는 무엇일까요?
    a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.
    b. 매개변수를 식별하기 위해 사용하기 위해서입니다.
    c. 매개변수를 매핑하기 위해 사용하기 위해서입니다.
    d. 매개변수를 분리하여 전달하기 위해 사용하기 위해서입니다.

   정답: a. 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시키기 위해서입니다.

   해설: @Param 어노테이션을 사용하여 매개변수의 이름과 SQL 쿼리에서 사용하는 매개변수 이름을 일치시킬 수 있습니다. 이를 통해 MyBatis는 매개변수를 올바르게 매핑하여 쿼리 실행에 사용합니다.



7. 다음 중 매개변수로 2~3개의 데이터를 처리하기 위해 사용되는 형식은 무엇인가요?
   a. List
   b. Set
   c. Map
   d. Array

   정답: c. Map
   해설: 매개변수로 2~3개의 데이터를 처리하기 위해 주로 Map 형식을 사용합니다. Map을 활용하여 각 매개변수의 이름과 값을 매핑하여 전달할 수 있습니다.


8. Map을 활용하여 매개변수를 전달하는 mapper에서 SQL 문 내에서 매개변수를 참조하기 위해 사용되는 표현은 어떤 것인가요?
   a. #{params.ename_sch}
   b. #{ename_sch}
   c. ${params.ename_sch}
   d. ${ename_sch}

   정답: b. #{ename_sch}

   해설: Map을 활용하여 매개변수를 전달할 때 SQL 문 내에서 매개변수를 참조하기 위해서는 `#{}` 형식을 사용합니다. 예를 들어, `#{ename_sch}`는 Map의 key인 "ename_sch"에 해당하는 값을 매핑하여 사용합니다.
	#{속성/key} : 특정 컬럼단위의 PreparedStatement의 ?에
	해당하는 데이터를 mapping 시킬 때, 사용
	${데이터} : 동적 sql로 조건이나 반복에 의해 sql문자열 만들 때,
	사용한다.
	if(name.equals("himan"){
		sql += "and name='"+name+"';
	}

9. 다음 중 dao 메서드의 리턴 타입이 void인 경우에는 어떤 태그를 생략할 수 있나요?
   a. `<resultType>`
   b. `<parameterType>`
   c. `<returnType>`
   d. 생략할 수 없음

    정답: a. `<resultType>`

    해설: dao 메서드의 리턴 타입이 void인 경우에는 `<resultType>` 태그를 생략할 수 있습니다. 이는 결과를 반환하지 않는 경우이므로 결과 타입을 명시할 필요가 없습니다.

   
   
   
   
   