# ajax는 다음과 단계로 연습한다.
1. 기본 개념 확인 하기
	
2. 기본 메서드 확인

3. 동기처리
	1) 서버 : 단일 데이터 가져오기  
	2) 서버 : 복합 데이터 가져오기(배열)
	3) 서버 : 복합 데이터 가져오기(객체-json)  
	4) 서버 : 요청값 전송 서버에 데이터 가져오기 
			client <====> server		
	5) 서버 : 요청값 전송 db 연동 데이터 가져오기
		- 화면가져오기
		- json데이터로 가져오기(Gson)
4. 비동기처리
	1) 비동기와 동기처리할 때 구분
	2) 서버에 요청값 전송 DB연동 데이터 가져오기
5. post방식으로 데이터 처리하기
----------------------------------
6. jquery ajax사용하기
7. vue axios 데이터 처리하기..

# ajax DB 처리하기
1. DB모듈 dao 처리 : 요청값 매개변수 객체 확인
2. 데이터 출력 형식 결정
	1) html 화면
	2) json 데이터
3. 이벤트에 의해서 데이터 가져오기
	1) 요청값 전달 : get방식/post방식
	2) 화면가져오기.
	
# 클라이언트 vs 서버단 처리 내용 구분
1. 클라이언트
	1) 화면 UI 구현
		 [  ] :입력
		 table :출력
	2) 화면에 이벤트 처리 이벤트핸들러함수
		- onclick="callAjax()"
		- onkeyup="callAjax()"
	3) 이벤트핸들러함수(callAjax())
		- 요청값 전달할 DOM객체의 value값 호출
			var enameVal = document.querySelector("#ename").value	
		- ajax연동 처리(함수모듈구분)
			function synGet(page)
				var xhr = new XMLHttpRequest()
				xhr.open("get","서버자원",false)
					get방식으로 서버의 특정 데이터나 화면을 가지고 오는
					페이지 지정하고, 동기식(false)처리
					요청값을 전달할려면 서버자원?key=value 형식으로
					페이지를 지정하여야 한다.  
				xhr.send()
				return xhr.responseText : 서버에서 가져온 데이터나 화면
		- 결과값을 출력한 DOM innerHTML
			var tBody = document.querySelector("tbody")
			tBody.innerHTML = synGet("페이지?ename="+enameVal)
			# json데이터를 받을시
			var empList = JSON.parse( synGet("페이지?ename="+enameVal))
			var html = ""
			empList.forEach(function(emp)){
				html +="<tr>"
				html +="<td>"+emp.empno+"</td>"
				html +="<td>"+emp.ename+"</td>"
				....
				html +="</tr>"
			}	
			tBody.innerHTML = html
2. 서버단 프로그램("페이지?ename="+enameVal)
	1) 요청값에 대한 처리
		${param.ename}
		String ename = request.getParameter("ename");
		if(ename==null) ename = "";
	2) DB연동 호출(import, Dao객체 생성, 메서드에 요청값 전달)
		List<Emp> elist = dao.getEmpList(ename);
	3) 화면만들기
		<%for(Emp e:elist)%>
		<tr>
			<td><%=e.getEmpno()%></td>
			<td><%=e.getEname()%></td>
			<td><%=e.getJob()%></td>
			...
	4) json데이터만들기.
	    Gson : 객체 ==> json문자열로 변환..
	    		<%=만들어진 json데이터 출력%>	
		jstl : <c:forEach var="emp" items="${empList}">
					[
						{"empno":${emp.empno},
						 "ename":"${emp.ename}",
						 ...
						}					
					]
		servlet처리(controller) 
			==> spring에서 controller			

# jquery Ajax처리 연습
0. 요구사항 내용 확인

1. 에러 발생시 대응 방법

2. server단 처리 
	1) 요청값 처리
	2) dao 데이터 처리
	3) json 데이터 변경
	
3. client단 처리
	1) 화면 ui 
	2) 이벤트 및 이벤트 핸들러
	3) ajax 코드 및 속성 확인
	
# 연습예제1 : 물건구매(daoX)
 	요청값 처리
	0. 요구사항 내용 확인
		화면에 물건명과 가격과 갯수를 입력해서 click 서버로 요청값 전달.
		총계값을 ajax로 받아서 출력..
		
	1. 에러 발생시 대응 방법
		1) 프로세스 흐름을 System.out.println("#1")
		2) 프로세스 흐름을 console.log("#1")
		흐름대로 각 단계별로 흘러가지 않는 이유를 생각해본다.
		3) 프로세스 흐름을 console.log(변수)
		
	2. server단 처리 
		1) 요청값 처리
			물건명 가격 갯수 받기
		2) dao 데이터 처리
		3) json 데이터 변경
			총계로 return 받기..
		
	3. client단 처리
		1) 화면 ui 
			물건명 가격 갯수 입력 클릭
		2) 이벤트 및 이벤트 핸들러
			click
		3) ajax 코드 및 속성 확인
			$.ajax({
				url:서버의주소
				data:요청(물건명가격갯수
				type:post/get
				dataType:json/text/html
				success:function(data){}
				error:function(){}
			}) 	
 	
 	
 	
# 연습예제2 : 숫자카운트(daoX)
	json데이터 처리 	
# 연습예제3 : (dao)
	dao처리
	 	
		
	
	
	
	










				
				
  
	
	



 

