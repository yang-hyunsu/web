1. EL이 지원하는 내장 객체는 다음 중 어떤 것이 아닌가요?
    1) pageScope
    2) requestScope
    3) fileScope
    4) sessionScope

2. `${내장객체.속성}`의 사용법은 어떤 것에 해당하는가요?
    1) EL의 내장 객체의 속성을 가져온다
    2) EL의 내장 객체를 제거한다
    3) EL의 내장 객체의 이름을 변경한다
    4) EL의 내장 객체의 속성을 숨긴다

3. EL에서 요청 파라미터의 값을 저장하는 객체는 무엇인가요?
    1) pageContext
    2) param
    3) header
    4) cookie

4. 아래의 코드에서 `&price=3000&price=2000&price=1000`의 값을 배열로 가져올 때 사용하는 내장 객체는 무엇인가요?
    1) param
    2) paramValues
    3) header
    4) cookie

5. XMLHttpRequest 객체를 생성하는 코드는 무엇인가요?
    1) var xhr = new XMLHttpRequest()
    2) var xhr = XMLHttpRequest()
    3) var xhr = new XMLRequest()
    4) var xhr = XMLRequest()

6. xhr의 open 메서드에서 동기 방식을 설정하려면 세 번째 인자에 어떤 값을 주어야 하는가요?
    1) true
    2) false
    3) 0
    4) 1

7. 비동기 방식에서, 서버에서 해당 자원을 전송해주는 데이터를 받는 속성은 무엇인가요?
    1) xhr.send()
    2) xhr.open()
    3) xhr.responseText
    4) xhr.status

8. 동기 방식이 아닌 경우, 어떤 이벤트와 이벤트 핸들러 함수를 처리해야 하는가요?
    1) xhr.onreadyStatechange
    2) xhr.onreadystatechange
    3) xhr.onStatechange
    4) xhr.onchangeState
    
9. 아래의 설명 중 AJAX에 대한 설명으로 가장 적절한 것은 무엇인가요?
    1) 웹 화면을 전환하여 데이터를 받아와 처리하는 방식이다.
    2) 동기적으로 서버와 통신하는 JavaScript 방식이다.
    3) 화면 전환 없이 데이터를 받아와 처리하는 방식이다.
    4) 항상 서버와 클라이언트가 같은 속도로 연계하는 방식이다.

10. 동기 방식의 특징으로 올바르지 않은 것은 무엇인가요?
    1) 서버와 클라이언트가 같은 속도로 연계한다.
    2) 파일을 서버에 다 올려서 해당 파일 정보와 실제 파일이 있을 때, 다운로드 하거나 이미지를 볼 수 있다.
    3) 검색처리하고, 다른 기능을 처리하면서 검색이 완료되었을 때, 화면에 로딩되어 보이는 방식이다.
    4) 웹 화면에서 form데이터를 입력하고, submit후 다시 화면이 전환되면 서버에서 만들어지는 화면을 사용한다.

11. 비동기 방식의 설명 중 잘못된 것은 무엇인가요?
    1) 서버와 클라이언트가 같은 속도로 연계하지 않는다.
    2) 편지를 우체통에 넣고 답장이 오면 처리하는 것을 말한다.
    3) 검색처리하고, 다른 기능을 처리하면서 검색이 완료되었을 때, 화면에 로딩되어 보이는 것을 말한다.
    4) 해당 비동기 처리 과정의 이벤트 처리와 이에 맞는 이벤트 핸들러 함수를 선언해야 한다.

12. XMLHttpRequest 객체의 설명으로 부적절한 것은 무엇인가요?
    1) 화면 전환 없이 서버에 있는 자원들을 가지고 오는 js 내장 객체이다.
    2) 동기/비동기 기능을 모두 지원한다.
    3) var xhr = new XMLHttpRequest() 코드로 생성할 수 있다.
    4) 비동기식 처리를 위한 이벤트 및 이벤트 핸들러 함수 선언이 필요하지 않다.

13. 아래 중 옵션 설정 메서드로 적절한 것은 무엇인가요?
    1) xhr.send()
    2) xhr.open("get","서버의자원", true);
    3) xhr.responseText
    4) xhr.onreadyStatechange

14. 아래 중 JSON 형식에 관한 설명으로 잘못된 것은 무엇인가요?
    1) JSON 형식은 {"key",value}의 형태를 가진다.
    2) key는 "" 사이에 위치한다.
    3) value가 문자열일 때는 "" 사이에 위치하고, 숫자일 경우에는 바로 입력한다.
    4) JSON 형식의 데이터는 주로 서버에서 가져온다.

15. 아래 중 JSON 문자열을 객체로 변환하는 방법으로 잘못된 것은 무엇인가요?
    1) eval("("+xhr.responseText+")")
    2) JSON.parse(xhr.reponseText)
    3) JSON.stringify(xhr.responseText)
    4) 모두 다 올바른 방법이다.


# 해설 문제 풀이    
1. EL이 지원하는 내장 객체는 다음 중 어떤 것이 아닌가요?
    1) pageScope
    2) requestScope
    3) fileScope
    4) sessionScope

    - 정답: 3) fileScope
    - 해설: EL(Expression Language)은 pageScope, requestScope, sessionScope, applicationScope를 지원하지만, fileScope는 지원하지 않는다.


2. `${내장객체.속성}`의 사용법은 어떤 것에 해당하는가요?
    1) EL의 내장 객체의 속성을 가져온다
    2) EL의 내장 객체를 제거한다
    3) EL의 내장 객체의 이름을 변경한다
    4) EL의 내장 객체의 속성을 숨긴다

    - 정답: 1) EL의 내장 객체의 속성을 가져온다
    	저장된 속성의 데이터를 가져와서 출력 처리
    
    - 해설: `${내장객체.속성}`의 형식을 사용하면, EL의 내장 객체의 특정 속성을 가져올 수 있다.

3. EL에서 요청 파라미터의 값을 저장하는 객체는 무엇인가요?
    1) pageContext
    2) param
    3) header
    4) cookie

	호출할페이지?name=홍길동&age=25
	
	이름:${param.name}
	나이:${param.age}


    - 정답: 2) param
    - 해설: EL에서 요청 파라미터의 값을 저장하고 사용하기 위해 'param' 객체를 사용한다.


4. 아래의 코드에서 `&price=3000&price=2000&price=1000`의 값을 배열로 가져올 때 사용하는 내장 객체는 무엇인가요?
    1) param
    2) paramValues
    3) header
    4) cookie

    - 정답: 2) paramValues
    	${paramValues.price[0]}
    	${paramValues.price[1]}
    	${paramValues.price[2]}
    
    - 해설: 같은 파라미터명으로 여러 값을 받을 경우, 이 값들은 배열로 저장되며, 이를 가져오기 위해서는 'paramValues' 객체를 사용한다.



5. XMLHttpRequest 객체를 생성하는 코드는 무엇인가요?
    1) var xhr = new XMLHttpRequest()
    2) var xhr = XMLHttpRequest()
    3) var xhr = new XMLRequest()
    4) var xhr = XMLRequest()

    - 정답: 1) var xhr = new XMLHttpRequest()
    - 해설: 'var xhr = new XMLHttpRequest()'는 JavaScript에서 XMLHttpRequest 객체를 생성하는 코드이다.


6. xhr의 open 메서드에서 동기 방식을 설정하려면 세 번째 인자에 어떤 값을 주어야 하는가요?
    1) true
    2) false
    3) 0
    4) 1

    - 정답: 2) false
    	xhr.open("get/post","자원",true)
    	비동기가 true
    	동기는 false
    
    - 해설: open 메소드의 세 번째 인자가 false일 경우 동기 방식으로 설정된다.


7. 비동기 방식에서, 서버에서 해당 자원을 전송해주는 데이터를 받는 속성은 무엇인가요?
    1) xhr.send()
    2) xhr.open()
    3) xhr.responseText
    4) xhr.status

    - 정답: 3) xhr.responseText
    - 해설: 비동기 방식에서, 서버에서 전송된 데이터는 'xhr.responseText' 속성에 저장된다.


8. 동기 방식이 아닌 경우, 어떤 이벤트와 이벤트 핸들러 함수를 처리해야 하는가요?
    1) xhr.onreadyStatechange
    2) xhr.onreadystatechange
    3) xhr.onStatechange
    4) xhr.onchangeState

    - 정답: 1) xhr.onreadyStatechange
    - 해설: 비동기 방식에서는 'onreadystatechange' 이벤트가 발생할 때마다 이벤트 핸들러 함수를 실행하게 된다.


    
9. 아래의 설명 중 AJAX에 대한 설명으로 가장 적절한 것은 무엇인가요?
    1) 웹 화면을 전환하여 데이터를 받아와 처리하는 방식이다.
    2) 동기적으로 서버와 통신하는 JavaScript 방식이다.
    3) 화면 전환 없이 데이터를 받아와 처리하는 방식이다.
    4) 항상 서버와 클라이언트가 같은 속도로 연계하는 방식이다.

    - 정답: 3) 화면 전환 없이 데이터를 받아와 처리하는 방식이다.
    - 해설: AJAX(Asynchronous JavaScript and XML)는 페이지 전체를 새로고침하지 않고 필요한 부분만 업데이트 할 수 있는 방법이다.
    var xhr = new XMLHttpRequest()
    화면전환일어나지 않음
    xhr.open(get/post,페이지,true/false)
    xhr.onreadystatechange=function(){}
    
    

10. 동기 방식의 특징으로 올바르지 않은 것은 무엇인가요?
    1) 서버와 클라이언트가 같은 속도로 연계한다.
    2) 파일을 서버에 다 올려서 해당 파일 정보와 실제 파일이 있을 때, 다운로드 하거나 이미지를 볼 수 있다.
    3) 검색처리하고, 다른 기능을 처리하면서 검색이 완료되었을 때, 화면에 로딩되어 보이는 방식이다.
    4) 웹 화면에서 form데이터를 입력하고, submit후 다시 화면이 전환되면 서버에서 만들어지는 화면을 사용한다.

    - 정답: 3) 검색처리하고, 다른 기능을 처리하면서 검색이 완료되었을 때, 화면에 로딩되어 보이는 방식이다.
    - 해설: 이 설명은 비동기 방식의 특징을 설명한 것이다.

11. 비동기 방식의 설명 중 잘못된 것은 무엇인가요?
    1) 서버와 클라이언트가 같은 속도로 연계하지 않는다.
    2) 편지를 우체통에 넣고 답장이 오면 처리하는 것을 말한다.
    3) 검색처리하고, 다른 기능을 처리하면서 검색이 완료되었을 때, 화면에 로딩되어 보이는 것을 말한다.
    4) 해당 비동기 처리 과정의 이벤트 처리와 이에 맞는 이벤트 핸들러 함수를 선언해야 한다.

    - 정답: 1) 서버와 클라이언트가 같은 속도로 연계하지 않는다.
    - 해설: 비동기 방식은 서버와 클라이언트가 같은 속도로 연계하지 않는다는 것이 아니라, 클라이언트가 서버에 요청을 보낸 후 다른 작업을 할 수 있고, 서버로부터 응답이 오면 그때 처리를 한다는 의미이다.

12. XMLHttpRequest 객체의 설명으로 부적절한 것은 무엇인가요?
    1) 화면 전환 없이 서버에 있는 자원들을 가지고 오는 js 내장 객체이다.
    2) 동기/비동기 기능을 모두 지원한다.
    3) var xhr = new XMLHttpRequest() 코드로 생성할 수 있다.
    4) 비동기식 처리를 위한 이벤트 및 이벤트 핸들러 함수 선언이 필요하지 않다.

    - 정답: 4) 비동기식 처리를 위한 이벤트 및 이벤트 핸들러 함수 선언이 필요하지 않다.
    - 해설: XMLHttpRequest 객체는 비동기 방식으로 데이터를 처리할 때, 상태 변경을 감지하는 이벤트와 그에 따른 이벤트 핸들러 함수의 선언이 필요하다.


13. 아래 중 옵션 설정 메서드로 적절한 것은 무엇인가요?
    1) xhr.send()
    2) xhr.open("get","서버의자원", true);
    3) xhr.responseText
    4) xhr.onreadyStatechange

    - 정답: 2) xhr.open("get","서버의자원", true);
    - 해설: xhr.open() 메서드는 HTTP 요청을 서버로 보내기 위해 사용된다. 이 메서드는 요청 방식(GET, POST 등), URL, 비동기 설정 등을 지정한다.


14. 아래 중 JSON 형식에 관한 설명으로 잘못된 것은 무엇인가요?
    1) JSON 형식은 {"key",value}의 형태를 가진다.(X)
    2) key는 "" 사이에 위치한다. (O)
    3) value가 문자열일 때는 "" 사이에 위치하고, 
    	숫자일 경우에는 바로 입력한다.(O)
    4) JSON 형식의 데이터는 주로 서버에서 가져온다.(O)
    - 정답: 1) JSON 형식은 {"key",value}의 형태를 가진다.
    - 해설: JSON 형식은 키와 값의 쌍으로 구성되며, 이때 키와 값은 콜론(:)으로 구분된다. 따라서, 올바른 형식은 {"key":value}이다.

15. 아래 중 JSON 문자열을 객체로 변환하는 방법으로 잘못된 것은 무엇인가요?
    1) eval("("+xhr.responseText+")")
    2) JSON.parse(xhr.reponseText)
    3) JSON.stringify(xhr.responseText)
    4) 모두 다 올바른 방법이다.    

    - 정답: 3) JSON.stringify(xhr.responseText)
    	객체 ==> 문자열
    - 해설: JSON.stringify() 메서드는 JSON 객체를 문자열로 변환하는 데 사용되며, JSON.parse() 메서드는 문자열을 JSON 객체로 변환하는 데 사용된다. 따라서, JSON 문자열을 객체로 변환하려면 JSON.parse() 메

    