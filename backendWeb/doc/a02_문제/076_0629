1. AJAX 비동기 처리에서 `xhr.readyState`가 4인 경우는 무엇을 의미하는가?
   A) 객체를 생성한 상태
   B) 서버에서 데이터를 받을 준비가 된 상태
   C) 서버에서 일부 데이터를 받은 상태
   D) 서버에서 모든 데이터를 받은 상태

2. AJAX 비동기 처리에서 `xhr.status`가 200인 경우는 무엇을 의미하는가?
   A) 요청이 성공적으로 처리되었다.
   B) 페이지를 찾을 수 없다.
   C) 서버 내부 오류가 발생했다.
   D) 요청이 거부되었다.

3. AJAX 요청에서 POST 방식을 사용할 때, 요청 헤더의 Content-Type을 어떻게 설정해야 하는가?
   A) application/x-www-form-urlencoded
   B) application/json
   C) multipart/form-data
   D) text/plain

4. AJAX 요청에서 서버로부터 받은 응답 데이터를 처리하는 동안 사용자에게 요청 상태를 표시하는 일반적인 방법은 무엇인가?
   A) 데이터가 로드될 때까지 화면을 블록한다.
   B) 사용자에게 경고 메시지를 표시한다.
   C) 진행 상태 표시 줄을 표시한다.
   D) 화면을 새로 고친다.

5. AJAX 요청을 보내기 위해 `XMLHttpRequest` 객체의 `onreadystatechange` 이벤트 핸들러를 설정하는 이유는 무엇인가?
    A) 서버 응답이 도착했을 때 이벤트를 처리하기 위해
    B) 요청이 성공적으로 처리되었을 때 이벤트를 처리하기 위해
    C) 요청 상태 변화를 모니터링하기 위해
    D) 오류가 발생했을 때 이벤트를 처리하기 위해

6. AJAX 요청에서 서버로부터 받은 응답 데이터의 상태 코드가 200인 경우에만 응답 데이터를 처리하는 이유는 무엇인가?
    A) 요청이 성공적으로 처리되지 않은 경우 응답 데이터에 오류가 포함될 수 있기 때문에
    B) 서버로부터 받은 응답 데이터가 아닌 다른 종류의 데이터가 올 수 있기 때문에
    C) 서버로부터 받은 응답 데이터가 아직 완전하지 않을 수 있기 때문에
    D) 서버로부터 받은 응답 데이터가 없는 경우가 있기 때문에

7. AJAX 요청을 보낼 때 요청 메서드를 GET으로 설정하면 어떤 방식으로 요청이 전송되는가?
    A) URL 뒤에 query string으로 포함된다.
    B) 요청 본문에 포함되어 전송된다.
    C) 헤더에 포함되어 전송된다.
    D) 쿠키에 포함되어 전송된다.

8. AJAX 요청을 보낼 때 요청 메서드를 POST로 설정하면 어떤 방식으로 요청이 전송되는가?
    A) 요청 본문에 포함되어 전송된다.
    B) URL 뒤에 query string으로 포함된다.
    C) 헤더에 포함되어 전송된다.
    D) 쿠키에 포함되어 전송된다.

9. AJAX 요청을 보낼 때, 요청 헤더를 설정하는 메서드는 무엇인가?
    A) get()
    B) open()
    C) send()
    D) setRequestHeader()

10. AJAX 요청에서 서버로 데이터를 전송하기 위해 요청 헤더의 Content-Type을 `application/x-www-form-urlencoded`로 설정해야 하는 이유는 무엇인가?
    A) 데이터를 URL 인코딩하여 전송하기 때문에
    B) 데이터를 JSON 형식으로 전송하기 때문에
    C) 데이터를 멀티파트 형식으로 전송하기 때문에
    D) 데이터를 텍스트 형식으로 전송하기 때문에

11. AJAX 요청을 보낼 때, 서버로부터 받은 응답 데이터를 처리하기 위해 사용하는 자바스크립트 함수는 무엇인가?
    A) parseResponse()
    B) processResponse()
    C) handleResponse()
    D) JSON.parse()

12. AJAX 요청에서 서버와 통신하는 단계별 코드값을 나열한 것은?
   A) 0, 1, 2, 3, 4
   B) 1, 2, 3, 4, 5
   C) 0, 1, 2, 3, 4, 5
   D) 1, 2, 3, 4


1. AJAX 비동기 처리에서 `xhr.readyState`가 4인 경우는 무엇을 의미하는가?
   A) 객체를 생성한 상태
   B) 서버에서 데이터를 받을 준비가 된 상태
   C) 서버에서 일부 데이터를 받은 상태
   D) 서버에서 모든 데이터를 받은 상태

D) 서버에서 모든 데이터를 받은 상태입니다. xhr.readyState가 4인 경우는 AJAX 요청이 완료되었음을 나타냅니다.


2. AJAX 비동기 처리에서 `xhr.status`가 200인 경우는 무엇을 의미하는가?
   A) 요청이 성공적으로 처리되었다.
   B) 페이지를 찾을 수 없다.
   C) 서버 내부 오류가 발생했다.
   D) 요청이 거부되었다.

A) 요청이 성공적으로 처리되었다. xhr.status가 200인 경우는 HTTP 응답 코드가 200인 상태로 요청이 성공적으로 처리되었음을 나타냅니다.


#3. AJAX 요청에서 POST 방식을 사용할 때, 
    요청 헤더의 Content-Type을 어떻게 설정해야 하는가?
   A) application/x-www-form-urlencoded
   B) application/json
   C) multipart/form-data
   D) text/plain

A) application/x-www-form-urlencoded입니다. POST 방식의 AJAX 요청에서 요청 헤더의 Content-Type은 application/x-www-form-urlencoded로 설정해야 합니다.


#4. AJAX 요청에서 서버로부터 받은 응답 데이터를 처리하는 동안 
    사용자에게 요청 상태를 표시하는 일반적인 방법은 무엇인가?
   A) 데이터가 로드될 때까지 화면을 블록한다.
   B) 사용자에게 경고 메시지를 표시한다.
   C) 진행 상태 표시 줄을 표시한다.
   D) 화면을 새로 고친다.

C) 진행 상태 표시 줄을 표시합니다. AJAX 요청을 보낼 때 서버로부터 응답을 받기까지의 시간이 걸릴 수 있으므로 사용자에게 진행 상태를 표시하여 대기 상태임을 알려줍니다.
	xhr.onreadystatechange=function(){
		console.log(xhr.readyState)
		상태값 1~4일때, 4일때만, 반응값을 처리할 수 있도록 한다.
		
	}
#5. AJAX 요청을 보내기 위해 `XMLHttpRequest` 객체의 
	`onreadystatechange` 이벤트 핸들러를 설정하는 이유는 무엇인가?
    A) 서버 응답이 도착했을 때 이벤트를 처리하기 위해
    B) 요청이 성공적으로 처리되었을 때 이벤트를 처리하기 위해
    	if 조건을 처리했을 때 가능
    C) 요청 상태 변화를 모니터링하기 위해
    	모니터이하는 내용을 설정해야지 가능
    D) 오류가 발생했을 때 이벤트를 처리하기 위해
    	if 조건으로 오류를 발생에 대한 처리를 해야지 

A) 서버 응답이 도착했을 때 이벤트를 처리하기 위해입니다. 
xhr.onreadystatechange 이벤트 핸들러는
 AJAX 요청의 상태 변화를 모니터링하고, 
 서버 응답이 도착했을 때 해당 이벤트를 처리합니다.
 	응답이 완전하게 도착하고,오류가 발생하지 않는 코드 200일 때 처리.
 	
 
 


#6. AJAX 요청에서 서버로부터 받은 응답 데이터의 상태 코드가 200인 경우에만 응답 데이터를 처리하는 이유는 무엇인가?
    A) 요청이 성공적으로 처리되지 않은 경우 응답 데이터에 오류가 포함될 수 있기 때문에
    B) 서버로부터 받은 응답 데이터가 아닌 다른 종류의 데이터가 올 수 있기 때문에
    C) 서버로부터 받은 응답 데이터가 아직 완전하지 않을 수 있기 때문에
    D) 서버로부터 받은 응답 데이터가 없는 경우가 있기 때문에

A) 요청이 성공적으로 처리되지 않은 경우 응답 데이터에 오류가 포함될 수 있기 때문에입니다. 응답 상태 코드가 200인 경우에만 응답 데이터를 처리하는 것이 일반적입니다.


7. AJAX 요청을 보낼 때 요청 메서드를 GET으로 설정하면 어떤 방식으로 요청이 전송되는가?
    A) URL 뒤에 query string으로 포함된다.
    B) 요청 본문에 포함되어 전송된다.
    C) 헤더에 포함되어 전송된다.
    D) 쿠키에 포함되어 전송된다.

A) URL 뒤에 query string으로 포함됩니다. GET 방식의 AJAX 요청은 요청 파라미터가 URL 뒤에 query string으로 포함되어 전송됩니다.
	page?key=val&key=valu


8. AJAX 요청을 보낼 때 요청 메서드를 POST로 설정하면 어떤 방식으로 요청이 전송되는가?
    A) 요청 본문에 포함되어 전송된다.
    B) URL 뒤에 query string으로 포함된다.
    C) 헤더에 포함되어 전송된다.
    D) 쿠키에 포함되어 전송된다.

A) 요청 본문에 포함되어 전송됩니다. POST 방식의 AJAX 요청은 요청 본문에 데이터가 포함되어 전송됩니다.


9. AJAX 요청을 보낼 때, 요청 헤더를 설정하는 메서드는 무엇인가?
    A) get()
    B) open()
    C) send()
    D) setRequestHeader()

D) setRequestHeader()입니다. setRequestHeader() 메서드를 사용하여 AJAX 요청의 헤더를 설정할 수 있습니다.


#10. AJAX 요청에서 서버로 데이터를 전송하기 위해 요청 헤더의
  Content-Type을 `application/x-www-form-urlencoded`로 설정해야 하는 이유는 무엇인가?
    A) 데이터를 URL 인코딩하여 전송하기 때문에
    B) 데이터를 JSON 형식으로 전송하기 때문에
    C) 데이터를 멀티파트 형식으로 전송하기 때문에
    D) 데이터를 텍스트 형식으로 전송하기 때문에

A) 데이터를 URL 인코딩하여 전송하기 때문에입니다. 
	application/x-www-form-urlencoded로 설정하면 데이터가 URL 인코딩되어 전송되어 서버에서 쉽게 처리할 수 있습니다.
	


#11. AJAX 요청을 보낼 때, 서버로부터 받은 응답 데이터를 
	처리하기 위해 사용하는 자바스크립트 함수는 무엇인가?
    A) parseResponse()
    B) processResponse()
    C) handleResponse()
    D) JSON.parse()

D) JSON.parse()입니다. 서버로부터 받은 응답 데이터는 문자열로 전달되므로 JSON.parse() 함수를 사용하여 JSON 형식으로 파싱하여 처리할 수 있습니다.
	클라이언 ==> 서버 : 요청값 처리
	서버 ==> 클라이언 : 결과값 - xhr.responseText
	받은 문자열데이터 객체로 변환 JSON.parse()

12. AJAX 요청에서 서버와 통신하는 단계별 코드값을 나열한 것은?
   A) 0, 1, 2, 3, 4
   B) 1, 2, 3, 4, 5
   C) 0, 1, 2, 3, 4, 5
   D) 1, 2, 3, 4
   
A) 0, 1, 2, 3, 4입니다. AJAX 요청과 관련하여 xhr.readyState 값은 0부터 4까지의 다양한 상태를 나타내며, 각각은 요청 단계를 의미합니다.

   





