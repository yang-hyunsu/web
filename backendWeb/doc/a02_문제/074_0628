1. XMLHttpRequest 객체의 메서드 중, 서버에 요청을 보내는 메서드는 무엇인가?
   - A) open()
   - B) send()
   - C) readyState()
   - D) status()

2. XMLHttpRequest 객체의 readyState가 4라는 것은 무엇을 의미하는가?
   - A) 요청이 초기화되지 않았다.
   - B) 서버와 연결이 끊어졌다.
   - C) 요청이 완료되고 응답이 준비되었다.
   - D) 요청이 수신 중이다.

3. JSP 페이지에서 JavaScript 변수에 값을 할당할 때 사용하는 스크립트릿 표현식은 무엇인가?
   - A) <%= variable %>
   - B) <% variable %>
   - C) <%: variable %>
   - D) <%# variable %>

4. XMLHttpRequest 객체의 status 속성이 200이라는 것은 무엇을 의미하는가?
   - A) 요청이 성공적으로 처리되었다.
   - B) 페이지를 찾을 수 없다.
   - C) 서버 내부 오류가 발생했다.
   - D) 요청이 거부되었다.

5. 'z06_reqJson.jsp' 페이지에서 'empno' 파라미터의 값을 어디서 가져오는가?
   - A) URL에서
   - B) HTML 폼에서
   - C) JavaScript 변수에서
   - D) 서버 세션에서

6. XMLHttpRequest 객체의 `open()` 메소드에 전달되는 두 번째 인수는 무엇인가요?
   - A. 요청의 메서드 (GET 또는 POST)
   - B. 요청의 URL
   - C. 요청 헤더의 이름
   - D. 요청 헤더의 값


7. JSP에서 Ajax 요청에 대한 응답을 보내는 방법 중 하나는 무엇인가요?
   - A. out.println()을 사용하여 응답 본문에 내용을 작성한다.
   - B. System.out.println()을 사용하여 응답 본문에 내용을 작성한다.
   - C. console.log()를 사용하여 응답 본문에 내용을 작성한다.
   - D. alert()를 사용하여 응답 본문에 내용을 작성한다.

8. XMLHttpRequest 객체의 `send()` 메서드를 호출하기 전에 반드시 호출되어야 하는 메서드는 무엇인가요?
   - A. get()
   - B. setRequestHeader()
   - C. open()
   - D. close()

9. AJAX 요청이 서버에서 오류를 반환하거나 네트워크 문제가 발생하는 경우, 어떤 XMLHttpRequest 객체의 속성을 확인해야 하나요?
   - A. statusText
   - B. responseText
   - C. status
   - D. responseType

10. XMLHttpRequest 객체의 readyState 속성이 4를 가리킬 때, 이는 무엇을 의미하는가요?
   - A. 요청이 초기화되었다.
   - B. 서버와의 연결이 설정되었다.
   - C. 요청이 처리되었고, 응답이 준비되었다.
   - D. 요청이 전송되었다.

11. AJAX를 사용하여 서버에서 데이터를 가져오는 동안 사용자에게 요청 상태를 표시하는 일반적인 방법은 무엇인가요?
   - A. 데이터가 로드될 때까지 화면을 블록한다.
   - B. 사용자에게 경고 메시지를 표시한다.
   - C. 진행 상태 표시 줄을 표시한다.
   - D. 화면을 새로 고친다.

12. 다음 중 XMLHttpRequest 객체를 사용하여 AJAX 요청을 처리하는 동안 발생할 수 있는 오류는 무엇인가요?
   - A. 시간 초과
   - B. 네트워크 오류
   - C. 보안 오류
   - D. 모두 다

13. JSP 페이지에서 요청 파라미터를 읽는 데 사용되는 메서드는 무엇인가요?
   - A. getAttribute()
   - B. getParameter()
   - C. getRequest()
   - D. getAttributeValues()

14. 다음 중 AJAX를 사용할 때 주의해야 할 점은 무엇인가요?
   - A. AJAX 요청은 항상 동기식으로 처리되어야 한다.
   - B. AJAX 요청은 페이지의 새로고침 없이 서버로부터 데이터를 가져올 수 있다.
   - C. AJAX 요청은 크로스 도메인 요청에 제한이 있다.
   - D. AJAX 요청은 데이터를 전송할 때 항상 JSON 형식을 사용해야 한다.
   
   
1. XMLHttpRequest 객체의 메서드 중, 서버에 요청을 보내는 메서드는 무엇인가?
   - A) open()
   - B) send()
   - C) readyState()
   - D) status()

B) send(): XMLHttpRequest 객체의 메서드 중 서버에 요청을 보내는 메서드입니다.

2. XMLHttpRequest 객체의 readyState가 4라는 것은 무엇을 의미하는가?
   - A) 요청이 초기화되지 않았다.
   - B) 서버와 연결이 끊어졌다.
   - C) 요청이 완료되고 응답이 준비되었다.
   - D) 요청이 수신 중이다.

C) 요청이 완료되고 응답이 준비되었다: XMLHttpRequest 객체의 readyState가 4라는 것은 요청이 완료되고 응답이 준비되었음을 의미합니다.


4. JSP 페이지에서 JavaScript 변수에 값을 할당할 때 사용하는 스크립트릿 표현식은 무엇인가?
   - A) <%= variable %>
   - B) <% variable %>
   - C) <%: variable %>
   - D) <%# variable %>

A) <%= variable %>: JSP 페이지에서 JavaScript 변수에 값을 할당할 때 사용하는 스크립트릿 표현식입니다.


5. XMLHttpRequest 객체의 status 속성이 200이라는 것은 무엇을 의미하는가?
   - A) 요청이 성공적으로 처리되었다.
   - B) 페이지를 찾을 수 없다.
   - C) 서버 내부 오류가 발생했다.
   - D) 요청이 거부되었다.

A) 요청이 성공적으로 처리되었다: XMLHttpRequest 객체의 status 속성이 200이라는 것은 요청이 성공적으로 처리되었음을 의미합니다.


6. 'z06_reqJson.jsp' 페이지에서 'empno' 파라미터의 값을 어디서 가져오는가?
   - A) URL에서
   - B) HTML 폼에서
   - C) JavaScript 변수에서
   - D) 서버 세션에서
A) URL에서: 'z06_reqJson.jsp' 페이지에서 'empno' 파라미터의 값을 URL에서 가져옵니다.


7. XMLHttpRequest 객체의 `open()` 메소드에 전달되는 두 번째 인수는 무엇인가요?
   - A. 요청의 메서드 (GET 또는 POST)
   - B. 요청의 URL
   - C. 요청 헤더의 이름
   - D. 요청 헤더의 값

A) 요청의 메서드 (GET 또는 POST): XMLHttpRequest 객체의 open() 메소드에 전달되는 두 번째 인수는 요청의 메서드 (GET 또는 POST) 입니다.


9. JSP에서 Ajax 요청에 대한 응답을 보내는 방법 중 하나는 무엇인가요?
   - A. out.println()을 사용하여 응답 본문에 내용을 작성한다.
   - B. System.out.println()을 사용하여 응답 본문에 내용을 작성한다.
   - C. console.log()를 사용하여 응답 본문에 내용을 작성한다.
   - D. alert()를 사용하여 응답 본문에 내용을 작성한다.

A) out.println()을 사용하여 응답 본문에 내용을 작성한다: JSP에서 Ajax 요청에 대한 응답을 보내는 방법 중 하나는 out.println()을 사용하여 응답 본문에 내용을 작성하는 것입니다.


10. XMLHttpRequest 객체의 `send()` 메서드를 호출하기 전에 반드시 호출되어야 하는 메서드는 무엇인가요?
   - A. get()
   - B. setRequestHeader()
   - C. open()
   - D. close()

C) open(): XMLHttpRequest 객체의 send() 메서드를 호출하기 전에 반드시 호출되어야 하는 메서드는 open() 입니다.


11. AJAX 요청이 서버에서 오류를 반환하거나 네트워크 문제가 발생하는 경우, 어떤 XMLHttpRequest 객체의 속성을 확인해야 하나요?
   - A. statusText
   - B. responseText
   - C. status
   - D. responseType

C) status: AJAX 요청이 서버에서 오류를 반환하거나 네트워크 문제가 발생하는 경우, XMLHttpRequest 객체의 status 속성을 확인해야 합니다.



14. XMLHttpRequest 객체의 readyState 속성이 4를 가리킬 때, 이는 무엇을 의미하는가요?
   - A. 요청이 초기화되었다.
   - B. 서버와의 연결이 설정되었다.
   - C. 요청이 처리되었고, 응답이 준비되었다.
   - D. 요청이 전송되었다.

C) 요청이 처리되었고, 응답이 준비되었다: XMLHttpRequest 객체의 readyState 속성이 4를 가리킬 때, 이는 요청이 처리되었고, 응답이 준비되었음을 의미합니다.


15. AJAX를 사용하여 서버에서 데이터를 가져오는 동안 사용자에게 요청 상태를 표시하는 일반적인 방법은 무엇인가요?
   - A. 데이터가 로드될 때까지 화면을 블록한다.
   - B. 사용자에게 경고 메시지를 표시한다.
   - C. 진행 상태 표시 줄을 표시한다.
   - D. 화면을 새로 고친다.

C) 진행 상태 표시 줄을 표시한다: AJAX를 사용하여 서버에서 데이터를 가져오는 동안 사용자에게 요청 상태를 표시하는 일반적인 방법은 진행 상태 표시 줄을 표시하는 것입니다.


16. 다음 중 XMLHttpRequest 객체를 사용하여 AJAX 요청을 처리하는 동안 발생할 수 있는 오류는 무엇인가요?
   - A. 시간 초과
   - B. 네트워크 오류
   - C. 보안 오류
   - D. 모두 다

D) 모두 다: XMLHttpRequest 객체를 사용하여 AJAX 요청을 처리하는 동안 시간 초과, 네트워크 오류, 보안 오류 등 여러 오류가 발생할 수 있습니다.

17. JSP 페이지에서 요청 파라미터를 읽는 데 사용되는 메서드는 무엇인가요?
   - A. getAttribute()
   - B. getParameter()
   - C. getRequest()
   - D. getAttributeValues()
B) getParameter(): JSP 페이지에서 요청 파라미터를 읽는 데 사용되는 메서드는 getParameter() 입니다.

18. 다음 중 AJAX를 사용할 때 주의해야 할 점은 무엇인가요?
   - A. AJAX 요청은 항상 동기식으로 처리되어야 한다.
   - B. AJAX 요청은 페이지의 새로고침 없이 서버로부터 데이터를 가져올 수 있다.
   - C. AJAX 요청은 크로스 도메인 요청에 제한이 있다.
   - D. AJAX 요청은 데이터를 전송할 때 항상 JSON 형식을 사용해야 한다.
 
 C) AJAX 요청은 크로스 도메인 요청에 제한이 있다: AJAX 요청은 동일 출처 정책에 따라, 다른 도메인으로의 요청에 제한이 있습니다. 이를 해결하기 위해서는 크로스 도메인 요청을 허용하는 설정이 필요합니다.
   
   
   
      
   